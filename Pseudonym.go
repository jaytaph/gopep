package main

import (
	"crypto/sha512"

	"github.com/sirupsen/logrus"
)

func GeneratePseudonym(id string, pk *GroupElement) *ElGamal {
	// A pseudonym is generated by hashing the id and using the 64 bits as a scalar to generate a group element.
	// This group element is then encrypted using the public key.
	h := sha512.New()
	h.Write([]byte(id))
	b := h.Sum(nil)

	p := NewGroupElementFromBytes(b)
	logrus.Tracef("[GP] GeneratePseudonym: %s %s", id, p.HexString())

	return encrypt(p, pk)
}

// Returns a new pseudonym by rerandomizing the given pseudonym.
func RerandomizeLocal(lep *ElGamal) *ElGamal {
	return rerandomize(lep, RandomScalarNonZero())
}
